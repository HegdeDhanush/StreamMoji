# Working StreamMoji - Flask API + Kafka (Simplified)

services:
  # Zookeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:29092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Flask API only (no Spark)
  flask-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-api
    ports:
      - "5000:5000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_EMOJI_TOPIC: emoji-events
      PYTHONPATH: /app
      ENVIRONMENT: docker
    volumes:
      - ./dashboard.html:/app/dashboard.html:ro
      - ./src:/app/src:ro
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

volumes:
  kafka-data:
  zookeeper-data:
  zookeeper-logs:

